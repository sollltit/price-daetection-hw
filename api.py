import streamlit as st
from ultralytics import YOLO
import cv2
import easyocr
import tempfile

# –∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
model = YOLO('runs/detect/train3/weights/best.pt')
# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è EasyOcr; –≤—ã–±–∏—Ä–∞–µ–º —Ä—É—Å—Å–∫–∏–π –∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫–∏
reader = easyocr.Reader(['en', 'ru'])


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
def recognize_price_n(img, model):

    """
    
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –Ω–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å 
    –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –∏ –ø—É—Ç—å –∫ –º–æ–¥–µ–ª–∏ –¥–ª—è –¥–µ—Ç–µ–∫—Ü–∏–∏. 
        
    """

    # —á–∏—Ç–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é open-cv
    image = cv2.imread(img)
    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–µ—Ç–µ–∫—Ü–∏–∏ 
    results = model(image)
    
    if len(results[0].boxes) != 0:
        # –ø—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ–±–ª–∞—Å—Ç–∏ —Å —Ü–µ–Ω–æ–π
        for res in results:
            for box in res.boxes:
                # –ø–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏ –¥–µ—Ç–µ–∫—Ç–∏—Ä—É–µ–º–æ–π –æ–±–ª–∞—Å—Ç–∏
                x1, y1, x2, y2 = map(int, box.xyxy[0])
        
                # —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—É—é –æ–±–ª–∞—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
                crop = image[y1:y2, x1:x2]
                # –ø—Ä–∏–º–µ–Ω—è–µ–º EasyOcr –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
                ocr_res = reader.readtext(crop, allowlist='0123456789.')
    
                # –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω, –æ–Ω –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞ —Ñ–æ—Ç–æ –≤–º–µ—Å—Ç–µ —Å 
                # —Ä–∞–º–∫–æ–π –≤–æ–∫—Ä–≥—É –æ–±–ª–∞—Å—Ç–∏ —Å —Ü–µ–Ω–Ω–∏–∫–æ–º
                if ocr_res:
                    text = ocr_res[0][1]
                    st.write(f'–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: {text}')
                    cv2.rectangle(image, (x1, y1), (x2, y2), (0, 176, 65), 2)
                    cv2.putText(image, text, (x1, y1-10), cv2.FONT_HERSHEY_SIMPLEX, 3, (255, 0, 137), 5)
    
        return cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
    else: 
        img_no = cv2.imread('No.jpg')
        return cv2.cvtColor(img_no, cv2.COLOR_BGR2RGB)

st.title('–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞ –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏üè∑Ô∏è')
st.markdown('‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ')
st.html("<p><tt><span style='font-size: 24px;'>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –Ω–∞ –Ω—ë–º —Ü–µ–Ω–Ω–∏–∫</span></tt></p>")

uploaded_file = st.file_uploader('–í—ã–±—Ä–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', 
                                 accept_multiple_files=False, type=['jpg'])

if uploaded_file is not None:

    with tempfile.NamedTemporaryFile(delete=False, suffix=".jpg") as tmp_file:
        tmp_file.write(uploaded_file.getbuffer())
        tmp_file_path = tmp_file.name
    
    res = recognize_price_n(tmp_file_path, model) 
    st.image(res, caption='–†–µ–∑—É–ª—å—Ç–∞—Ç')